<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\group\Entity\GroupContent;

/**
 * Implements hook_entity_base_field_info().
 */
function group_simplecss_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'group') {
    $fields['group_simplecss'] = BaseFieldDefinition::create('string_long')
      ->setLabel(t('CSS'))
      ->setDescription(t('Will be added to any page containing this Group\'s content.'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('view', [
        'label' => 'hidden',
        'type' => 'hidden',
        'weight' => 50,
      ])
      ->setDisplayOptions('form', [
        'type' => 'string_textarea',
        'weight' => 50,
        'settings' => array(
          'rows' => 20,
        ),
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', FALSE);

    return $fields;
  }
}

/**
 * Implements hook_page_attachments().
 */
function group_simplecss_page_attachments(array &$attachments) {

  // If we're on a Group entity page.
  $group_route_context = \Drupal::service('group.group_route_context');
  $contexts = $group_route_context->getRuntimeContexts(['group']);
  $group = $contexts['group']->getContextValue();

  // If we're on a Node entity page.
  $node = \Drupal::request()->attributes->get('node');
  if ($node) {
    $group_content_array = GroupContent::loadByEntity($node);
    foreach ($group_content_array as $group_content) {
      $group = $group_content->getGroup();
    }
  }

  $group_simplecss = isset($group) && isset($group->get('group_simplecss')->getValue()[0]) ? $group->get('group_simplecss')->getValue()[0] : NULL;
  if (isset($group) && isset($group_simplecss) && $group_css = $group->get('group_simplecss')->getValue()[0]['value']) {
    $attachments['#attached']['html_head'][] = [
      [
        '#type' => 'html_tag',
        '#tag' => 'style',
        '#value' => $group_css,
      ],
      'group_simplecss',
    ];

    // @todo Can't do the following until https://www.drupal.org/node/2391025
    //  $attachments['#attached']['css'][] = array(
    //    'data' => $group_css,
    //    'scope' => 'header',
    //    'type' => 'inline',
    //  );
  }
}
